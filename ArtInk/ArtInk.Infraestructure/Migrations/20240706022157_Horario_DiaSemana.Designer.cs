// <auto-generated />
using System;
using ArtInk.Infraestructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArtInk.Infraestructure.Migrations
{
    [DbContext(typeof(ArtInkContext))]
    [Migration("20240706022157_Horario_DiaSemana")]
    partial class Horario_DiaSemana
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Canton", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<byte>("IdProvincia")
                        .HasColumnType("tinyint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_canton");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Canton", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Categoria", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id")
                        .HasName("PK_categoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Cliente", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("DireccionExacta")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<short>("IdDistrito")
                        .HasColumnType("smallint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.HasIndex("IdDistrito");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Contacto", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModifiacion")
                        .HasColumnType("datetime");

                    b.Property<byte>("IdProveedor")
                        .HasColumnType("tinyint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id")
                        .HasName("PK_contacto");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Contacto", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.DetalleFactura", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<short>("Cantidad")
                        .HasColumnType("smallint");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint");

                    b.Property<byte>("IdServicio")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("MontoImpuesto")
                        .HasColumnType("money");

                    b.Property<decimal>("MontoSubtotal")
                        .HasColumnType("money");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("money");

                    b.Property<byte>("NumeroLinea")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("TarifaServicio")
                        .HasColumnType("money");

                    b.HasKey("Id")
                        .HasName("PK_detalleFactura");

                    b.HasIndex("IdFactura");

                    b.HasIndex("IdServicio");

                    b.ToTable("DetalleFactura", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.DetalleFacturaProducto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<long>("IdDetalleFactura")
                        .HasColumnType("bigint");

                    b.Property<short>("IdProducto")
                        .HasColumnType("smallint");

                    b.HasKey("Id")
                        .HasName("PK_[DetalleFacturaProducto");

                    b.HasIndex("IdDetalleFactura");

                    b.HasIndex("IdProducto");

                    b.ToTable("DetalleFacturaProducto", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Distrito", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<byte>("IdCanton")
                        .HasColumnType("tinyint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_distrito");

                    b.HasIndex("IdCanton");

                    b.ToTable("Distrito", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Factura", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<short>("Consecutivo")
                        .HasColumnType("smallint");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<short>("IdCliente")
                        .HasColumnType("smallint");

                    b.Property<byte>("IdImpuesto")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IdTipoPago")
                        .HasColumnType("tinyint");

                    b.Property<short>("IdUsuarioSucursal")
                        .HasColumnType("smallint");

                    b.Property<decimal>("MontoImpuesto")
                        .HasColumnType("money");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("money");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<decimal>("PorcentajeImpuesto")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("money");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id")
                        .HasName("PK_factura");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdImpuesto");

                    b.HasIndex("IdTipoPago");

                    b.HasIndex("IdUsuarioSucursal");

                    b.ToTable("Factura", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Feriado", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.ToTable("Feriado", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Genero", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Genero", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Horario", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<string>("Dia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<TimeOnly>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<byte>("IdSucursal")
                        .HasColumnType("tinyint");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id")
                        .HasName("PK_horario");

                    b.HasIndex("IdSucursal");

                    b.ToTable("Horario", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Impuesto", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal>("Porcentaje")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Id");

                    b.ToTable("Impuesto", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Inventario", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<byte>("Disponible")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<short>("IdProducto")
                        .HasColumnType("smallint");

                    b.Property<byte>("IdSucursal")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Maxima")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Minima")
                        .HasColumnType("tinyint");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id")
                        .HasName("PK_inventario");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdSucursal");

                    b.ToTable("Inventario", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Producto", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<decimal>("Costo")
                        .HasColumnType("money");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<byte>("IdCategoria")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IdUnidadMedida")
                        .HasColumnType("tinyint");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SKU");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id")
                        .HasName("PK_producto");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdUnidadMedida");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Proveedor", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("CedulaJuridica")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("DireccionExacta")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<short>("IdDistrito")
                        .HasColumnType("smallint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("RasonSocial")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id")
                        .HasName("PK_proveedor");

                    b.HasIndex("IdDistrito");

                    b.ToTable("Proveedor", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Provincia", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_provincia");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValue("P")
                        .IsFixedLength();

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<TimeOnly>("Hora")
                        .HasColumnType("time");

                    b.Property<short>("IdSucursalHorario")
                        .HasColumnType("smallint");

                    b.Property<short>("IdUsuarioSucursal")
                        .HasColumnType("smallint");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id")
                        .HasName("PK_reserva");

                    b.HasIndex("IdSucursalHorario");

                    b.HasIndex("IdUsuarioSucursal");

                    b.ToTable("Reserva", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.ReservaPregunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdReserva")
                        .HasColumnType("int");

                    b.Property<string>("Pregunta")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Respuesta")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.HasIndex("IdReserva");

                    b.ToTable("ReservaPregunta");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.ReservaServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdReserva")
                        .HasColumnType("int");

                    b.Property<byte>("IdServicio")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("IdReserva");

                    b.HasIndex("IdServicio");

                    b.ToTable("ReservaServicio", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Rol", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id")
                        .HasName("PK_rol");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Servicio", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<byte>("IdTipoServicio")
                        .HasColumnType("tinyint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observacion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Tarifa")
                        .HasColumnType("money");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id")
                        .HasName("PK_servicio");

                    b.HasIndex("IdTipoServicio");

                    b.ToTable("Servicio", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Sucursal", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("DireccionExacta")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<short>("IdDistrito")
                        .HasColumnType("smallint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id")
                        .HasName("PK_sucursal");

                    b.HasIndex("IdDistrito");

                    b.ToTable("Sucursal", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.SucursalFeriado", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<byte>("IdFeriado")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IdSucursal")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK_SucursalFeriado");

                    b.HasIndex("IdFeriado");

                    b.HasIndex("IdSucursal");

                    b.ToTable("SucursalFeriado", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.SucursalHorario", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<short>("IdHorario")
                        .HasColumnType("smallint");

                    b.Property<byte>("IdSucursal")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("IdHorario");

                    b.HasIndex("IdSucursal");

                    b.ToTable("SucursalHorario", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.TipoPago", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Referencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TipoPago", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.TipoServicio", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<TimeOnly>("Duracion")
                        .HasColumnType("time");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoServicio", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.UnidadMedida", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Simbolo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nchar(5)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("UnidadMedida");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Usuario", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Contrasenna")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("DireccionExacta")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<short>("IdDistrito")
                        .HasColumnType("smallint");

                    b.Property<byte>("IdGenero")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IdRol")
                        .HasColumnType("tinyint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.Property<string>("UrlFoto")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id")
                        .HasName("PK_usuario");

                    b.HasIndex("IdDistrito");

                    b.HasIndex("IdGenero");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.UsuarioSucursal", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<byte>("IdSucursal")
                        .HasColumnType("tinyint");

                    b.Property<short>("IdUsuario")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("IdSucursal");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuarioSucursal", (string)null);
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Canton", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.Provincia", "IdProvinciaNavigation")
                        .WithMany("Cantons")
                        .HasForeignKey("IdProvincia")
                        .IsRequired()
                        .HasConstraintName("FK_Canton_Provincia");

                    b.Navigation("IdProvinciaNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Cliente", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.Distrito", "IdDistritoNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdDistrito")
                        .IsRequired()
                        .HasConstraintName("FK_Cliente_Distrito");

                    b.Navigation("IdDistritoNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Contacto", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.Proveedor", "IdProveedorNavigation")
                        .WithMany("Contactos")
                        .HasForeignKey("IdProveedor")
                        .IsRequired()
                        .HasConstraintName("FK_Contacto_Proveedor");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.DetalleFactura", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.Factura", "IdFacturaNavigation")
                        .WithMany("DetalleFacturas")
                        .HasForeignKey("IdFactura")
                        .IsRequired()
                        .HasConstraintName("FK_DetalleFactura_Factura");

                    b.HasOne("ArtInk.Infraestructure.Models.Servicio", "IdServicioNavigation")
                        .WithMany("DetalleFacturas")
                        .HasForeignKey("IdServicio")
                        .IsRequired()
                        .HasConstraintName("FK_DetalleFactura_Servicio");

                    b.Navigation("IdFacturaNavigation");

                    b.Navigation("IdServicioNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.DetalleFacturaProducto", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.DetalleFactura", "IdDetalleFacturaNavigation")
                        .WithMany("DetalleFacturaProductos")
                        .HasForeignKey("IdDetalleFactura")
                        .IsRequired()
                        .HasConstraintName("FK_DetalleFacturaProducto_DetalleFactura");

                    b.HasOne("ArtInk.Infraestructure.Models.Producto", "IdProductoNavigation")
                        .WithMany("DetalleFacturaProductos")
                        .HasForeignKey("IdProducto")
                        .IsRequired()
                        .HasConstraintName("FK_DetalleFacturaProducto_Producto");

                    b.Navigation("IdDetalleFacturaNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Distrito", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.Canton", "IdCantonNavigation")
                        .WithMany("Distritos")
                        .HasForeignKey("IdCanton")
                        .IsRequired()
                        .HasConstraintName("FK_Distrito_Canton");

                    b.Navigation("IdCantonNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Factura", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Facturas")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK_Factura_Cliente");

                    b.HasOne("ArtInk.Infraestructure.Models.Impuesto", "IdImpuestoNavigation")
                        .WithMany("Facturas")
                        .HasForeignKey("IdImpuesto")
                        .IsRequired()
                        .HasConstraintName("FK_Factura_Impuesto");

                    b.HasOne("ArtInk.Infraestructure.Models.TipoPago", "IdTipoPagoNavigation")
                        .WithMany("Facturas")
                        .HasForeignKey("IdTipoPago")
                        .IsRequired()
                        .HasConstraintName("FK_Factura_TipoPago");

                    b.HasOne("ArtInk.Infraestructure.Models.UsuarioSucursal", "IdUsuarioSucursalNavigation")
                        .WithMany("Facturas")
                        .HasForeignKey("IdUsuarioSucursal")
                        .IsRequired()
                        .HasConstraintName("FK_Factura_UsuarioSucursal");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdImpuestoNavigation");

                    b.Navigation("IdTipoPagoNavigation");

                    b.Navigation("IdUsuarioSucursalNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Horario", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.Sucursal", "IdSucursalNavigation")
                        .WithMany("Horarios")
                        .HasForeignKey("IdSucursal")
                        .IsRequired()
                        .HasConstraintName("FK_Horario_Sucursal");

                    b.Navigation("IdSucursalNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Inventario", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.Producto", "IdProductoNavigation")
                        .WithMany("Inventarios")
                        .HasForeignKey("IdProducto")
                        .IsRequired()
                        .HasConstraintName("FK_Inventario_Producto");

                    b.HasOne("ArtInk.Infraestructure.Models.Sucursal", "IdSucursalNavigation")
                        .WithMany("Inventarios")
                        .HasForeignKey("IdSucursal")
                        .IsRequired()
                        .HasConstraintName("FK_Inventario_Sucursal");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdSucursalNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Producto", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.Categoria", "IdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .IsRequired()
                        .HasConstraintName("FK_Producto_Categoria");

                    b.HasOne("ArtInk.Infraestructure.Models.UnidadMedida", "IdUnidadMedidaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdUnidadMedida")
                        .IsRequired()
                        .HasConstraintName("FK_Producto_UnidadMedida");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdUnidadMedidaNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Proveedor", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.Distrito", "IdDistritoNavigation")
                        .WithMany("Proveedors")
                        .HasForeignKey("IdDistrito")
                        .IsRequired()
                        .HasConstraintName("FK_Proveedor_Distrito");

                    b.Navigation("IdDistritoNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Reserva", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.SucursalHorario", "IdSucursalHorarioNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdSucursalHorario")
                        .IsRequired()
                        .HasConstraintName("FK_Reserva_SucursalHorario");

                    b.HasOne("ArtInk.Infraestructure.Models.UsuarioSucursal", "IdUsuarioSucursalNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdUsuarioSucursal")
                        .IsRequired()
                        .HasConstraintName("FK_Reserva_UsuarioSucursal");

                    b.Navigation("IdSucursalHorarioNavigation");

                    b.Navigation("IdUsuarioSucursalNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.ReservaPregunta", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.Reserva", "IdReservaNavigation")
                        .WithMany("ReservaPregunta")
                        .HasForeignKey("IdReserva")
                        .IsRequired()
                        .HasConstraintName("FK_ReservaPregunta_Reserva");

                    b.Navigation("IdReservaNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.ReservaServicio", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.Reserva", "IdReservaNavigation")
                        .WithMany("ReservaServicios")
                        .HasForeignKey("IdReserva")
                        .IsRequired()
                        .HasConstraintName("FK_ReservaServicio_Reserva");

                    b.HasOne("ArtInk.Infraestructure.Models.Servicio", "IdServicioNavigation")
                        .WithMany("ReservaServicios")
                        .HasForeignKey("IdServicio")
                        .IsRequired()
                        .HasConstraintName("FK_ReservaServicio_Servicio");

                    b.Navigation("IdReservaNavigation");

                    b.Navigation("IdServicioNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Servicio", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.TipoServicio", "IdTipoServicioNavigation")
                        .WithMany("Servicios")
                        .HasForeignKey("IdTipoServicio")
                        .IsRequired()
                        .HasConstraintName("FK_Servicio_TipoServicio");

                    b.Navigation("IdTipoServicioNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Sucursal", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.Distrito", "IdDistritoNavigation")
                        .WithMany("Sucursals")
                        .HasForeignKey("IdDistrito")
                        .IsRequired()
                        .HasConstraintName("FK_Sucursal_Distrito");

                    b.Navigation("IdDistritoNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.SucursalFeriado", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.Feriado", "IdFeriadoNavigation")
                        .WithMany("SucursalFeriados")
                        .HasForeignKey("IdFeriado")
                        .IsRequired()
                        .HasConstraintName("FK_SucursalFeriado_Feriado");

                    b.HasOne("ArtInk.Infraestructure.Models.Sucursal", "IdSucursalNavigation")
                        .WithMany("SucursalFeriados")
                        .HasForeignKey("IdSucursal")
                        .IsRequired()
                        .HasConstraintName("FK_SucursalFeriado_Sucursal");

                    b.Navigation("IdFeriadoNavigation");

                    b.Navigation("IdSucursalNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.SucursalHorario", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.Horario", "IdHorarioNavigation")
                        .WithMany("SucursalHorarios")
                        .HasForeignKey("IdHorario")
                        .IsRequired()
                        .HasConstraintName("FK_SucursalHorario_Horario");

                    b.HasOne("ArtInk.Infraestructure.Models.Sucursal", "IdSucursalNavigation")
                        .WithMany("SucursalHorarios")
                        .HasForeignKey("IdSucursal")
                        .IsRequired()
                        .HasConstraintName("FK_SucursalHorario_Sucursal");

                    b.Navigation("IdHorarioNavigation");

                    b.Navigation("IdSucursalNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Usuario", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.Distrito", "IdDistritoNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdDistrito")
                        .IsRequired()
                        .HasConstraintName("FK_Usuario_Distrito");

                    b.HasOne("ArtInk.Infraestructure.Models.Genero", "IdGeneroNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdGenero")
                        .IsRequired()
                        .HasConstraintName("FK_Usuario_Genero");

                    b.HasOne("ArtInk.Infraestructure.Models.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .IsRequired()
                        .HasConstraintName("FK_Usuario_Rol");

                    b.Navigation("IdDistritoNavigation");

                    b.Navigation("IdGeneroNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.UsuarioSucursal", b =>
                {
                    b.HasOne("ArtInk.Infraestructure.Models.Sucursal", "IdSucursalNavigation")
                        .WithMany("UsuarioSucursals")
                        .HasForeignKey("IdSucursal")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioSucursal_Sucursal");

                    b.HasOne("ArtInk.Infraestructure.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("UsuarioSucursals")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioSucursal_Usuario");

                    b.Navigation("IdSucursalNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Canton", b =>
                {
                    b.Navigation("Distritos");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Cliente", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.DetalleFactura", b =>
                {
                    b.Navigation("DetalleFacturaProductos");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Distrito", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Proveedors");

                    b.Navigation("Sucursals");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Factura", b =>
                {
                    b.Navigation("DetalleFacturas");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Feriado", b =>
                {
                    b.Navigation("SucursalFeriados");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Genero", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Horario", b =>
                {
                    b.Navigation("SucursalHorarios");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Impuesto", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Producto", b =>
                {
                    b.Navigation("DetalleFacturaProductos");

                    b.Navigation("Inventarios");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Proveedor", b =>
                {
                    b.Navigation("Contactos");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Provincia", b =>
                {
                    b.Navigation("Cantons");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Reserva", b =>
                {
                    b.Navigation("ReservaPregunta");

                    b.Navigation("ReservaServicios");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Servicio", b =>
                {
                    b.Navigation("DetalleFacturas");

                    b.Navigation("ReservaServicios");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Sucursal", b =>
                {
                    b.Navigation("Horarios");

                    b.Navigation("Inventarios");

                    b.Navigation("SucursalFeriados");

                    b.Navigation("SucursalHorarios");

                    b.Navigation("UsuarioSucursals");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.SucursalHorario", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.TipoPago", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.TipoServicio", b =>
                {
                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.UnidadMedida", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.Usuario", b =>
                {
                    b.Navigation("UsuarioSucursals");
                });

            modelBuilder.Entity("ArtInk.Infraestructure.Models.UsuarioSucursal", b =>
                {
                    b.Navigation("Facturas");

                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
